{{ 'section-contact-form.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="color-{{ section.settings.color_scheme }}  section-{{ section.id }}-padding gradient">
  <div class="contact-form-container">
    <div class="contact-form-header">
      {%- if section.settings.heading != blank -%}
        {{ section.settings.heading }}
      {%- else -%}
        {{ 'templates.contact.form.title' | t }}
      {%- endif -%}
    </div>
    <div class="contact page-width page-width--narrow">
      {%- liquid
        assign contact_form_class = 'isolate'
        if settings.animations_reveal_on_scroll
          assign contact_form_class = 'isolate scroll-trigger animate--slide-in'
        endif
      -%}
      {%- form 'contact', id: 'ContactForm', class: contact_form_class -%}
        {%- if form.posted_successfully? -%}
          <h2 class="form-status form-status-list form__message" tabindex="-1" autofocus>
            {{- 'icon-success.svg' | inline_asset_content -}}
            {{ 'templates.contact.form.post_success' | t }}
          </h2>
        {%- elsif form.errors -%}
          <div class="form__message">
            <h2 class="form-status caption-large text-body" role="alert" tabindex="-1" autofocus>
              {{- 'icon-error.svg' | inline_asset_content -}}
              {{ 'templates.contact.form.error_heading' | t }}
            </h2>
          </div>
          <ul class="form-status-list caption-large" role="list">
            <li>
              <a href="#ContactForm-email" class="link">
                {{ form.errors.translated_fields.email | capitalize }}
                {{ form.errors.messages.email }}
              </a>
            </li>
          </ul>
        {%- endif -%}
        <label class="input-label">Full name <span class="required">*</span></label>
        <div class="custom-field">
          <input
            class="field__input"
            autocomplete="name"
            type="text"
            id="ContactForm-name"
            name="contact[{{ 'templates.contact.form.name' | t }}]"
            value="{% if form.name %}{{ form.name }}{% elsif customer %}{{ customer.name }}{% endif %}"
            required
          >
        </div>
        <label class="input-label">Email <span class="required">*</span></label>
        <div class="custom-field field--with-error">
          <input
            autocomplete="email"
            type="email"
            id="ContactForm-email"
            class="field__input"
            name="contact[email]"
            spellcheck="false"
            autocapitalize="off"
            value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
            aria-required="true"
            {% if form.errors contains 'email' %}
              aria-invalid="true"
              aria-describedby="ContactForm-email-error"
            {% endif %}
            placeholder="your@email.com"
            required
          >

          {%- if form.errors contains 'email' -%}
            <small class="contact__field-error" id="ContactForm-email-error">
              <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
              <span class="form__message">
                <span class="svg-wrapper">
                  {{- 'icon-error.svg' | inline_asset_content -}}
                </span>
                {{- form.errors.translated_fields.email | capitalize }}
                {{ form.errors.messages.email -}}
              </span>
            </small>
          {%- endif -%}
        </div>
        <label class="input-label">Subject <span class="required">*</span></label>
        <div class="custom-field">
          <select name="contact[subject]" id="ContactForm-subject" class="field__input" required>
            <option value="" disabled selected>Select a subject</option>
            <option value="order-status">Order status</option>
            <option value="report-issue">Report an issue</option>
            <option value="product-question">Product question</option>
            <option value="update-shipping">Update shipping address</option>
            <option value="cancel-order">Cancel an order</option>
            <option value="feedback">Feedback</option>
            <option value="other">Other</option>
          </select>
        </div>
        <label class="input-label">Message <span class="required">*</span></label>
        <div class="custom-field">
          <textarea
            rows="10"
            id="ContactForm-body"
            class="text-area field__input"
            name="contact[{{ 'templates.contact.form.comment' | t }}]"
            required
          >
          {{- form.body -}}
        </textarea>
        </div>
        <div class="custom-field">
          <label for="ContactForm-file" class="file-upload-button">
            {{- 'icon-file.svg' | inline_asset_content -}}
            Attach Files
          </label>
          <input
            type="file"
            id="ContactForm-file"
            name="contact[file]"
            class="file-input"
            multiple
            accept="image/*,.pdf,.doc,.docx,.txt"
          >
          <p class="file-note">Attach up to 10 files. The maximum allowed size per file is 20 MB.</p>
          <div class="file-list" id="file-list"></div>
        </div>
        <div class="contact__button">
          <button type="submit" class="button">
            {{ 'templates.contact.form.send' | t }}
          </button>
        </div>
      {%- endform -%}
    </div>
  </div>
</div>

<script>
  let selectedFiles = [];

  const input = document.getElementById('ContactForm-file');
  const fileList = document.getElementById('file-list');

  input.addEventListener('change', function (e) {
    const newFiles = Array.from(e.target.files);

    const totalFiles = selectedFiles.length + newFiles.length;
    if (totalFiles > 10) {
      input.value = '';
      return;
    }

    for (const file of newFiles) {
      if (!selectedFiles.find((f) => f.name === file.name)) {
        selectedFiles.push(file);
      }
    }

    input.value = '';
    renderFiles();
  });

  function renderFiles() {
    fileList.innerHTML = selectedFiles
      .map(
        (file, index) => `
        <div class="file-item">
          <span class="file-name">${file.name}</span>
          <button type="button" class="file-remove" onclick="removeFile(${index})">&times;</button>
        </div>`
      )
      .join('');
  }

  function removeFile(index) {
    selectedFiles.splice(index, 1);
    renderFiles();
  }
</script>

{% schema %}
{
  "name": "t:sections.contact-form.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "t:sections.contact-form.settings.title.default",
      "label": "t:sections.contact-form.settings.title.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "t:sections.contact-form.presets.name"
    }
  ]
}
{% endschema %}
